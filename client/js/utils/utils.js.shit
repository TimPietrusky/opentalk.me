
console.log('utils');



function imageExp(){
	$('.message-image').on('click',function(){
		// console.log('exp');
		// console.log( $(this) );
		$(this).toggleClass('exp');
		// if( $(this).hasClass('exp') )
		// 	$(this).removeClass('exp');
		// else
		// 	$(this).addClass('exp');
	})
}




/*
USER GOES OFFLINE
*/
/*
-unsubscribe from Messages, OnlineUsers
-remove user from OnlineUsers Collection (Meteor.call)
*/
function goOffline(){
	if(Session.get('userid'))
		Meteor.call('setUserStatus',Session.get('userid'),Session.get('username'),Session.get('roomid'),'offline');
	else
		Meteor.call('setUserStatus',Session.get('userid'),Session.get('username'),Meteor._localStorage.getItem('roomid'),'offline');
}


function goOnline(){
	if(!loggingOut && Session.get('userid') && Session.get('roomid') && OnlineUsers.find({userid:Session.get('userid'),roomid:Session.get('roomid')}).fetch().length === 0){  
		//console.log('going Online with ' + Session.get('userid') + ' ' + Session.get('roomid') );
		setAvatar();
		Meteor.call('setUserStatus',Session.get('userid'),Session.get('username'),Session.get('roomid'),'online');
		Meteor.call('setUserId',Session.get('userid'));
	}
}


function setAvatar(){
	if( Meteor.user() ){
		if(Meteor.user().services){
			if(Meteor.user().services.twitter)
				Session.set('avatar',Meteor.user().services.twitter.profile_image_url);
			if(Meteor.user().services.google)
				Session.set('avatar',Meteor.user().services.google.picture);
			if(Meteor.user().services.facebook)
				Session.set('avatar','https://graph.facebook.com/'+Meteor.user().services.facebook.username+'/picture');
			if(Meteor.user().services.github){
				//make ajax call to get profile image
				var gh_api_url = 'https://api.github.com/users/' + Meteor.user().services.github.username;
				//console.log('ajax to gh');
				$.ajax({
				  url: gh_api_url
				}).done(function ( data ) {
				    if(data.avatar_url)
				    	Session.set('avatar',data.avatar_url);
				});
			}
		}
	}else{
		Session.set('avatar','/images/avatar.png');
	}
}



function isValidRoom(r){
	if(r.match(/^[^#\/>]+$/gi))
	  return true;
	return false;
}



/*
USER ENTERS A ROOM

CAUTION:
THE ROOM MUST BEGIN WITH NO SLASH
*/
function joinRoom(r){
	//valid path
	/*
	unsubscribe and go offline from current room
	  This because if condition is true, the user will be subscribed and signed in as online again
	  else it's all ok, since he is in /
	*/

	goOffline();
	//unsubscribe();
	Session.set('roomid',null);

	if(r === ''){
		Meteor.Router.to('/');
		goOffline();
	}
	if(isValidRoom(r)) {
	  //console.log('valid path\nrouting to /' + r);
	  Meteor.Router.to('/'+r);
	  Session.set('roomid',r);
	  Meteor._localStorage.setItem('roomid',r);
	  Meteor._localStorage.setItem('roomid',r);
	  goOnline();
	  subscribe();
	} else {
	  Meteor.Router.to('/');
	  console.log('invalid path or already root\nrouting to /');
	}
}